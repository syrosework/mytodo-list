{"version":3,"sources":["components/sorting-select/SortingSelect.module.css","App.module.css","components/todo-list/TodoList.module.css","data/todos/actions.ts","components/todo/TodoItem.tsx","data/todos/selectors.ts","data/sortings/selectors.ts","components/todo-list/TodoList.tsx","data/sortings/actions.ts","components/sorting-select/SortingSelect.tsx","App.tsx","state-loader/local-storage-loader.ts","state-loader/abstract-state-loader.ts","data/sortings/reducer.ts","index.tsx","data/store.ts","data/todos/reducer.ts","components/todo/TodoItem.module.css"],"names":["module","exports","root","value","optionsList","optionItem","header","createTodoButton","createTodo","todo","type","payload","updateTodo","updatedProps","removeTodo","todoIdToRemove","TodoItem","onTitleChange","e","_this","props","id","dateModified","Date","title","target","onToggleIsDoneButtonClick","_this$props$todo","isDone","onDeleteButtonClick","_this$props$todo2","this","react","className","styles","lib_default","a","defaultValue","onBlur","buttonGroup","onClick","cn","button","buttonCheck","Object","defineProperty","buttonIsDone","buttonDelete","React","connect","dispatch","bindActionCreators","selectTodosAsArray","createSelector","state","todos","todosState","ids","map","byId","selectTodosArraySorted","sorting","currentSorting","todosCopy","toConsumableArray","sort","b","TodoList","onCreateTodoButtonClick","todoNextId","dateCreated","todo_TodoItem","key","changeSorting","newSorting","SortingSelect","listOpened","rootRef","toggleOptionsList","setState","clickOutsideOfSelectListener","current","Element","contains","closeOptionsList","onSortingChange","window","addEventListener","removeEventListener","_this2","_this$props","sortings","ref","label","App","react_default","createElement","sorting_select_SortingSelect","todo_list_TodoList","Component","LocalStorageLoader","initialStateFallback","serializedState","localStorage","getItem","stateId","JSON","parse","console","error","currentState","stringify","setItem","AbstractStateLoader","classCallCheck","TITLE_SORTING","TITLE_REVERSE_SORTING","sortingReducer","initialState","arguments","length","undefined","action","objectSpread","store","stateLoader","loadedState","loadState","createReduxStore","combineReducers","_action$payload","concat","_action$payload2","changedProps","objectWithoutProperties","idToRemove","todosByIdCopy","filter","__REDUX_DEVTOOLS_EXTENSION__","subscribe","saveState","getState","createStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3749b22a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SortingSelect_root__HDZYG\",\"value\":\"SortingSelect_value__3eOTy\",\"optionsList\":\"SortingSelect_optionsList__1FNYU\",\"optionItem\":\"SortingSelect_optionItem__3r5qn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2Oox0\",\"header\":\"App_header__1eFJi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TodoList_root__19jZh\",\"createTodoButton\":\"TodoList_createTodoButton__2C0VC\"};","import {\n  CreateTodoAction,\n  CreateTodoPayload,\n  RemoveTodoAction,\n  RemoveTodoPayload,\n  UpdateTodoAction,\n  UpdateTodoPayload\n} from \"./types\"\n\nexport function createTodo(todo: CreateTodoPayload): CreateTodoAction {\n  return {\n    type: 'CREATE_TODO_ACTION',\n    payload: todo,\n  }\n}\n\nexport function updateTodo(updatedProps: UpdateTodoPayload): UpdateTodoAction {\n  return {\n    type: 'UPDATE_TODO_ACTION',\n    payload: updatedProps,\n  }\n}\n\nexport function removeTodo(todoIdToRemove: RemoveTodoPayload): RemoveTodoAction {\n  return {\n    type: 'REMOVE_TODO_ACTION',\n    payload: todoIdToRemove\n  }\n}\n\n\n","import * as React from \"react\"\nimport styles from './TodoItem.module.css'\nimport {connect} from \"react-redux\"\nimport {RemoveTodoPayload, Todo, UpdateTodoPayload} from \"../../data/todos/types\"\nimport cn from 'classnames'\nimport {bindActionCreators, Dispatch} from \"redux\"\nimport {removeTodo, updateTodo} from \"../../data/todos/actions\"\nimport TextareaAutosize from 'react-autosize-textarea'\n\ntype OwnProps = {\n  todo: Todo\n}\n\ntype DispatchProps = {\n  updateTodo: (payload: UpdateTodoPayload) => void\n  removeTodo: (payload: RemoveTodoPayload) => void\n}\n\nclass TodoItem extends React.Component<OwnProps & DispatchProps> {\n  render() {\n    const {todo: {isDone, title}} = this.props\n    return (\n      <li className={styles.root}>\n        <TextareaAutosize\n          className={styles.title}\n          defaultValue={title}\n          onBlur={this.onTitleChange}\n        />\n        <div className={styles.buttonGroup}>\n          <button\n            onClick={this.onToggleIsDoneButtonClick}\n            className={\n              cn(\n                styles.button,\n                styles.buttonCheck,\n                {[styles.buttonIsDone]: isDone},\n              )\n            }\n          />\n          <button\n            onClick={this.onDeleteButtonClick}\n            className={\n              cn(\n                styles.button,\n                styles.buttonDelete,\n              )\n            }\n          />\n        </div>\n      </li>\n    )\n  }\n\n  onTitleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.updateTodo({\n      id: this.props.todo.id,\n      dateModified: new Date(),\n      title: e.target.value,\n    })\n  }\n\n  onToggleIsDoneButtonClick = () => {\n    const {id, isDone} = this.props.todo\n    this.props.updateTodo({\n      id,\n      dateModified: new Date(),\n      isDone: !isDone,\n    })\n  }\n\n  onDeleteButtonClick = () => {\n    const {id} = this.props.todo\n    this.props.removeTodo({id})\n  }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n  return bindActionCreators({\n    updateTodo,\n    removeTodo,\n  }, dispatch)\n}\n\nexport default connect(null, mapDispatchToProps)(TodoItem)","import {createSelector} from \"reselect\"\nimport {GlobalState} from \"../types\"\nimport {Todo, TodosState} from \"./types\"\nimport {selectCurrentSorting} from \"../sortings/selectors\"\n\nconst selectTodosState = (state: GlobalState): TodosState => state.todos\n\nexport const selectTodosAsArray = createSelector(\n  selectTodosState,\n  (todosState: TodosState): Todo[] => {\n    return todosState.ids.map((id: number) => todosState.byId[id])\n  })\n\nexport const selectTodosArraySorted = createSelector(\n  selectTodosAsArray,\n  selectCurrentSorting,\n  (todos, currentSorting) => {\n    const todosCopy = [...todos]\n    switch (currentSorting.value) {\n      case 'title':\n        return todosCopy.sort((a, b) => {\n          if (a.title > b.title) {\n            return 1\n          }\n          if (a.title < b.title) {\n            return -1\n          }\n          return 0\n        })\n      case 'titleReverse':\n        return todosCopy.sort((a, b) => {\n          if (a.title > b.title) {\n            return -1\n          }\n          if (a.title < b.title) {\n            return 1\n          }\n          return 0\n        })\n      default:\n        return todosCopy\n    }\n  }\n)","import {GlobalState} from \"../types\"\nimport {Sorting} from \"./types\"\n\nexport const selectCurrentSorting = (state: GlobalState): Sorting => state.sorting.currentSorting","import * as React from \"react\"\nimport styles from './TodoList.module.css'\nimport {GlobalState} from \"../../data/types\"\nimport {connect} from \"react-redux\"\nimport TodoItem from \"../todo/TodoItem\"\nimport {bindActionCreators, Dispatch} from \"redux\"\nimport {CreateTodoPayload, Todo} from \"../../data/todos/types\"\nimport {createTodo} from \"../../data/todos/actions\"\nimport {selectTodosArraySorted} from \"../../data/todos/selectors\"\n\ntype PropsFromState = {\n  todos: Todo[]\n  todoNextId: number\n}\n\ntype DispatchProps = {\n  createTodo: (payload: CreateTodoPayload) => void\n}\n\nclass TodoList extends React.Component<PropsFromState & DispatchProps> {\n  render() {\n    const {todos} = this.props\n    return (\n      <ul className={styles.root}>\n        {todos.map((todo: Todo) => (\n          <TodoItem key={todo.id} todo={todo}/>\n        ))}\n        <button\n          className={styles.createTodoButton}\n          onClick={this.onCreateTodoButtonClick}\n        >\n          Create Todo +\n        </button>\n      </ul>\n    )\n  }\n\n  onCreateTodoButtonClick = () => {\n    this.props.createTodo({\n      id: this.props.todoNextId,\n      title: '',\n      dateCreated: new Date(),\n    })\n  }\n}\n\nfunction mapStateToProps(state: GlobalState): PropsFromState {\n  return {\n    todos: selectTodosArraySorted(state),\n    todoNextId: state.todos.todoNextId,\n  }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n  return bindActionCreators({\n    createTodo,\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)","import {ChangeSortingAction, ChangeSortingPayload} from \"./types\"\n\nexport function changeSorting(newSorting: ChangeSortingPayload): ChangeSortingAction {\n  return {\n    type: 'CHANGE_SORTING_ACTION',\n    payload: newSorting,\n  }\n}","import * as React from 'react'\nimport {connect} from \"react-redux\"\nimport {GlobalState} from \"../../data/types\"\nimport styles from './SortingSelect.module.css'\nimport {ChangeSortingAction, ChangeSortingPayload, Sorting, SortingState} from \"../../data/sortings/types\"\nimport {bindActionCreators, Dispatch} from \"redux\"\nimport {changeSorting} from \"../../data/sortings/actions\"\nimport cn from 'classnames'\n\ntype PropsFromState = SortingState\n\ntype DispatchProps = {\n  changeSorting: (newSorting: ChangeSortingPayload) => ChangeSortingAction\n}\n\ntype State = {\n  listOpened: boolean\n}\n\nclass SortingSelect extends React.Component<PropsFromState & DispatchProps, State> {\n\n  state: State = {\n    listOpened: false,\n  }\n\n  private rootRef = React.createRef<HTMLDivElement>()\n\n\n  componentDidMount(): void {\n    window.addEventListener('click', this.clickOutsideOfSelectListener)\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('click', this.clickOutsideOfSelectListener)\n  }\n\n  render() {\n    const {currentSorting, sortings} = this.props\n    const {listOpened} = this.state\n    return (\n      <div\n        ref={this.rootRef}\n        className={styles.root}\n      >\n        <button\n          className={styles.value}\n          onClick={this.toggleOptionsList}\n        >\n          Sort: {currentSorting.label}\n        </button>\n        {listOpened &&\n        <ul\n          className={\n            cn(\n              styles.optionsList,\n            )\n          }\n        >\n          {sortings.map((sorting: Sorting) => (\n            <button\n              className={styles.optionItem}\n              key={sorting.value}\n              onClick={this.onSortingChange(sorting)}\n            >\n              {sorting.label}\n            </button>\n          ))}\n        </ul>\n        }\n      </div>\n    )\n  }\n\n  toggleOptionsList = () => {\n    this.setState({listOpened: !this.state.listOpened})\n  }\n\n  clickOutsideOfSelectListener = (e: MouseEvent) => {\n    if (\n      this.rootRef.current\n      && e.target instanceof Element\n      && !this.rootRef.current.contains(e.target)\n    ) {\n      this.closeOptionsList()\n    }\n  }\n\n  closeOptionsList = () => {\n    this.setState({listOpened: false})\n  }\n\n  onSortingChange = (newSorting: Sorting) => () => {\n    this.props.changeSorting(newSorting)\n    this.closeOptionsList()\n  }\n}\n\nfunction mapStateToProps(state: GlobalState): PropsFromState {\n  return state.sorting\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): DispatchProps {\n  return bindActionCreators({\n    changeSorting,\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortingSelect)\n","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport TodoList from \"./components/todo-list/TodoList\"\nimport SortingSelect from \"./components/sorting-select/SortingSelect\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.root}>\n        <header className={styles.header}>\n          Todo App\n          <SortingSelect/>\n        </header>\n        <TodoList/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import AbstractStateLoader from \"./abstract-state-loader\"\n\nexport default class LocalStorageLoader<ST> extends AbstractStateLoader<ST> {\n\n  loadState(initialStateFallback: ST): ST {\n    try {\n      const serializedState = localStorage.getItem(this.stateId)\n      if (serializedState === null) {\n        return initialStateFallback\n      }\n      return (JSON.parse(serializedState) as ST) // TODO: Add validation here\n    } catch (e) {\n      console.error(e)\n      return initialStateFallback\n    }\n  }\n\n  saveState(currentState: ST): void {\n    try {\n      const serializedState = JSON.stringify(currentState)\n      localStorage.setItem(this.stateId, serializedState)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n}","export default abstract class AbstractStateLoader<ST> {\n\n  protected stateId: string\n\n  constructor(stateId: string) {\n    this.stateId = stateId\n  }\n\n  abstract loadState(initialStateFallback: ST): ST\n\n  abstract saveState(currentState: ST): void\n}\n\n","import {ChangeSortingAction, Sorting, SortingState} from \"./types\"\n\nexport const TITLE_SORTING: Sorting = {\n  value: 'title',\n  label: 'by Title \\u2193',\n}\n\nexport const TITLE_REVERSE_SORTING: Sorting = {\n  value: 'titleReverse',\n  label: 'by Title \\u2191',\n}\n\nexport function sortingReducer(initialState: SortingState) {\n  return (state: SortingState = initialState, action: ChangeSortingAction): SortingState => {\n    switch (action.type) {\n      case 'CHANGE_SORTING_ACTION': {\n        return {\n          ...state,\n          currentSorting: action.payload,\n        }\n      }\n      default:\n        return state\n    }\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {Provider} from 'react-redux'\nimport {createStore} from \"./data/store\"\n\nconst store = createStore()\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n","import {combineReducers, createStore as createReduxStore, Store} from 'redux'\nimport {todosReducer} from \"./todos/reducer\"\nimport {GlobalState} from \"./types\"\nimport LocalStorageLoader from \"../state-loader/local-storage-loader\"\nimport {sortingReducer, TITLE_REVERSE_SORTING, TITLE_SORTING} from \"./sortings/reducer\"\n\nfunction initializeStateFallback(): GlobalState {\n  return {\n    todos: {\n      byId: {},\n      ids: [],\n      todoNextId: 0,\n    },\n    sorting: {\n      currentSorting: TITLE_SORTING,\n      sortings: [TITLE_SORTING, TITLE_REVERSE_SORTING]\n    },\n  }\n}\n\nexport function createStore(): Store<GlobalState> {\n\n  const stateLoader = new LocalStorageLoader<GlobalState>('my-todo')\n  const loadedState = stateLoader.loadState(initializeStateFallback())\n\n  const store = createReduxStore(\n    combineReducers({\n      todos: todosReducer(loadedState.todos),\n      sorting: sortingReducer(loadedState.sorting),\n    }),\n    loadedState,\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__(),\n  )\n\n  store.subscribe(() => {\n    stateLoader.saveState(store.getState())\n  })\n\n  return store\n}","import {TodoAction, TodosState} from \"./types\"\n\n\nexport function todosReducer(initialState: TodosState) {\n  return (state: TodosState = initialState, action: TodoAction): TodosState => {\n    switch (action.type) {\n      case 'CREATE_TODO_ACTION': {\n        const {id, dateCreated, title} = action.payload\n        return {\n          ...state,\n          byId: {\n            ...state.byId,\n            [id]: {\n              id,\n              title,\n              dateCreated,\n              dateModified: dateCreated,\n              isDone: false,\n            }\n          },\n          ids: state.ids.concat(id),\n          todoNextId: id + 1,\n        }\n      }\n      case 'UPDATE_TODO_ACTION': {\n        const {id, dateModified, ...changedProps} = action.payload\n        return {\n          ...state,\n          byId: {\n            ...state.byId,\n            [id]: {\n              ...state.byId[id],\n              dateModified,\n              ...changedProps,\n            }\n          },\n        }\n      }\n      case 'REMOVE_TODO_ACTION': {\n        const {id: idToRemove} = action.payload\n        const todosByIdCopy = {...state.byId}\n        delete todosByIdCopy[idToRemove]\n        return {\n          ...state,\n          byId: todosByIdCopy,\n          ids: state.ids.filter((id: number) => id !== idToRemove)\n        }\n      }\n      default:\n        return state\n    }\n  }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TodoItem_root__vlunD\",\"title\":\"TodoItem_title__1VbDb\",\"buttonGroup\":\"TodoItem_buttonGroup__IfVaC\",\"button\":\"TodoItem_button__3KoKU\",\"buttonCheck\":\"TodoItem_buttonCheck__3ScDv\",\"buttonDelete\":\"TodoItem_buttonDelete__30p0Y\",\"buttonIsDone\":\"TodoItem_buttonIsDone__2L2WB\"};"],"sourceRoot":""}